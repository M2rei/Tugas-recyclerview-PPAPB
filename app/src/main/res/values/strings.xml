<resources>
    <string name="app_name">Tugas-recyclerview-PPAPB</string>
    <string name="jurnal1">Peningkatan Proses Pengembangan Perangkat Lunak dengan Metode Agile: Studi Kasus Implementasi di Perusahaan XYZ.</string>
    <string name="jurnal2">Analisis Dampak Praktik Continuous Integration dan Continuous Deployment (CI/CD) dalam Proyek Perangkat Lunak Terdistribusi.</string>
    <string name="jurnal3">Eksplorasi Metode Pengujian Otomatis dalam Pengembangan Perangkat Lunak: Studi Kasus pada Aplikasi E-commerce</string>
    <string name="jurnal4">Pengembangan Aplikasi Perangkat Lunak Berbasis Machine Learning untuk Meningkatkan Kualitas Prediksi Bisnis</string>
    <string name="jurnal5">Manajemen Risiko dalam Proyek Perangkat Lunak: Penerapan Framework untuk Pengidentifikasian dan Pengelolaan Risiko.</string>
    <string name="desc1"> studi kasus yang menggali perubahan signifikan dalam pengembangan perangkat lunak dengan menerapkan metode Agile di Perusahaan XYZ. Metode Agile telah menjadi paradigma dominan dalam pengembangan perangkat lunak, dikenal karena fleksibilitasnya dan fokus pada kebutuhan pelanggan. Penelitian ini melibatkan perubahan dari metode pengembangan perangkat lunak konvensional menjadi pendekatan Agile. Kami akan menguraikan perubahan proses, praktik pengembangan, dan perubahan budaya organisasi yang diperlukan untuk mengadopsi metode Agile. Selain itu, kami akan menganalisis dampaknya pada efisiensi pengembangan, kualitas produk, kepuasan pelanggan, dan kemampuan perusahaan untuk beradaptasi dengan perubahan pasar.</string>
    <string name="desc2">implikasi praktik Continuous Integration dan Continuous Deployment (CI/CD) dalam pengembangan proyek perangkat lunak terdistribusi. CI/CD adalah pendekatan yang memungkinkan pengiriman perangkat lunak secara cepat dan berkelanjutan, dengan mengotomatiskan proses pengujian dan implementasi. Dalam konteks proyek perangkat lunak terdistribusi, di mana berbagai tim bekerja secara geografis terpisah, CI/CD dapat memiliki dampak signifikan. Penelitian ini akan mendokumentasikan perubahan dalam pengiriman perangkat lunak, efisiensi pengembangan, kualitas kode, serta peningkatan dalam manajemen konflik integrasi yang mungkin muncul dalam pengembangan perangkat lunak terdistribusi. Kami juga akan membahas tantangan yang mungkin timbul dalam mengadopsi CI/CD di lingkungan terdistribusi.</string>
    <string name="desc3">memperdalam pemahaman tentang manfaat dan tantangan pengujian otomatis dalam konteks pengembangan aplikasi e-commerce yang kompleks. Dengan pertumbuhan pesat e-commerce, pengujian otomatis menjadi semakin penting untuk memastikan kualitas aplikasi dan meminimalkan kesalahan dalam lingkungan yang berubah dengan cepat. Penelitian ini akan menguraikan langkah-langkah eksplorasi metode pengujian otomatis, termasuk pemilihan alat, pengujian fungsional, pengujian performa, dan pengujian keamanan. Melalui studi kasus aplikasi e-commerce, kami akan membahas manfaat pengujian otomatis dalam meningkatkan efisiensi pengembangan, mengurangi kesalahan manusia, dan memastikan kualitas produk yang tinggi.</string>
    <string name="desc4"> pengembangan aplikasi perangkat lunak yang menggunakan teknik machine learning untuk meningkatkan kualitas prediksi dalam konteks bisnis. Dengan kemajuan dalam machine learning, organisasi dapat memanfaatkan data yang ada untuk membuat prediksi yang lebih akurat, meningkatkan pengambilan keputusan, dan memahami tren pasar. Penelitian ini akan menguraikan proses pengembangan aplikasi berbasis machine learning, termasuk pemilihan model, pengolahan data, pelatihan, dan pengujian. Kami akan menjelaskan bagaimana aplikasi ini dapat digunakan dalam berbagai sektor bisnis, mulai dari perbankan hingga e-commerce, dan memberikan contoh konkret implementasi aplikasi ini dalam meningkatkan kualitas prediksi bisnis.</string>
    <string name="desc5">mendalami konsep dan praktik manajemen risiko dalam pengembangan perangkat lunak. Pengembangan perangkat lunak seringkali melibatkan berbagai risiko, seperti risiko teknis, jadwal, dan anggaran. Untuk mengatasi risiko ini, organisasi perlu memiliki kerangka kerja yang efektif untuk mengidentifikasi, menilai, dan mengelola risiko. Penelitian ini akan memperkenalkan sebuah framework manajemen risiko yang dapat diterapkan dalam konteks pengembangan perangkat lunak. Kami akan menguraikan langkah-langkah dalam proses pengidentifikasian dan pengelolaan risiko serta memberikan contoh konkret penerapannya dalam proyek pengembangan perangkat lunak. Kami juga akan membahas manfaat dari manajemen risiko yang efektif dalam meningkatkan keberhasilan proyek dan mengurangi potensi hambatan yang mungkin muncul.</string>

</resources>
